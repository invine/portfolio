# Hand-written OpenAPI (v3) spec for our REST server.
openapi: 3.0.3
info:
  title: Portfolio REST server
  description: Portfolio REST server
  version: 1.0.0
servers:
  - url: http://everland.duckdns.org
paths:
  /portfolio:
    get:
      summary: Returns a list of all portfolios
      responses:
        '200':
          description: A JSON array of portfolio IDs and names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/portfolio'
    post:
      summary: Create a portfolio
      requestBody:
        description: Create new portfolio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/portfolio'
      responses:
          '201':
            description: OK
            # content:
            #   application/json:
            #     schema:
            #       type: integer
  /portfolio/{id}:
    get:
      summary: Get portfolio with specific id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The portfolio ID
        - in: query
          name: date
          required: false
          schema:
            type: string
          description: Date in format YYYYMMDD
      responses:
        '200':
          description: Portfolio with given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portfolio'
    # delete:
    #   summary: Delete task with specific id
    #   parameters:
    #     - in: path
    #       name: id
    #       required: true
    #       schema:
    #         type: integer
    #         minimum: 1
    #       description: The user ID
    #   responses:
    #     '200':
    #       description: Task with given id deleted
    #       content: {}
  /portfolio/{id}/transaction:
    post:
      summary: Apply transaction to portfolio with specific id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: The portfolio ID
      requestBody:
        description: Transaction to be applied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
      responses:
        '201':
            description: OK
  /signin:
    post:
      summary: Sign in with credentials
      requestBody:
        description: credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '201':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
  /signup:
    post:
      summary: Create new user
      requestBody:
        description: user details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '201':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
components:
  schemas:
    portfolio:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        balance:
          type: number
    asset:
      type: object
      properties:
        asset:
          type: string
        quantity:
          type: integer
    transaction:
      type: object
      properties:
        symbol:
          type: string
        amount:
          type: integer
        date:
          type: string
        price:
          type: number
    user:
      login:
        type: string
      email:
        type: string
      password:
        type: string
      name:
        type: password
